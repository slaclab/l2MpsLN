record(ao, "$(USER):word:count")
{
    field(SCAN, "Passive")
    field(OUT, "$(USER):init:seq PP")
  }

record(seq, "$(USER):init:seq")
{
    field(SCAN, "Passive")
    field(DOL1, "$(USER):word:count")
    field(LNK1, "$(USER):fanout:buffer PP")
    field(DO2, "1")
    field(LNK2, "$(USER):web:init PP")
  }

record(dfanout, "$(USER):fanout:buffer")
{
    field(SCAN, "Passive")
    field(OUTA, "$(USER):buffer:rbv PP")
    field(OUTB, "$(USER):to:div.A PP")
    field(OUTC, "$(USER):end:calc.A PP")
  }

record(ai, $(USER):buffer:rbv)
{
    field(SCAN, "Passive")
  }

record(calcout, "$(USER):to:div")
{
    field(SCAN, "Passive")
    field(CALC, "A/2")
    field(OUT, "$(USER):buffer_size PP")

  }

##Calculating the end buffer address
record(calcout, "$(USER):end:calc")
{
    field(SCAN, "Passive")
    field(INPB, "$(USER):begin_addr.VAL")
    field(CALC, "B + 2*A")
    field(OUT, "$(USER):end_addr")
  }
record(waveform, "$(USER):waveform")
{
    field(PINI, "1")
    field(DTYP, "asynInt16ArrayIn")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))WAVEFORM")
    field(FTVL, "SHORT")
    #field(NELM, "100000")
    field(NELM, "$(WAVEFORM_SIZE)")
    field(FLNK, "$(USER):waveform:subArray PP")
    field(SCAN, "I/O Intr")
  }

record(subArray, "$(USER):waveform:subArray")
{
    field(INP, "$(USER):waveform.VAL")
    field(FTVL, "SHORT")
    field(MALM, "$(WAVEFORM_SIZE)")
    field(NELM, "25000")
    field(INDX, "0")
  }

record(bo, "$(USER):run")
{
    field(SCAN, "Passive")
    field(DTYP, "asynUInt32Digital")
    field(OUT, "@asynMask($(PORT),$(ADDR), 1, $(TIMEOUT))RUN")
    #field(PINI, "1")
    field(ZNAM, "STOP")
    field(ONAM, "RUN")
  }

##WaveformDriver Initialize command
record(bo, "$(USER):web:init")
{
  field(DTYP, "asynUInt32Digital")
  field(SCAN, "Passive")
  field(OUT, "@asynMask($(PORT), $(ADDR), 1, $(TIMEOUT))INITIALIZE")
  field(ZNAM, "WHY")
  field(ONAM, "INIT")
}

##WaveformDriver BufferEndAddr
record(longout, "$(USER):end_addr")
{
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn($(PORT), $(ADDR), $(TIMEOUT))END_ADDR")
  }

##WaveformDriver BufferBeginAddr
record(longin, "$(USER):begin_addr")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT), $(ADDR), $(TIMEOUT))BEGIN_ADDR")
  }

##DaqMux Data buffer size
record(longout, "$(USER):buffer_size")
{
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn($(PORT), $(ADDR), $(TIMEOUT))BUFFER_SIZE")
  }